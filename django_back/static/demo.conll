Pandas	O
GroupBy	O
memory	O
deallocation	O
I	O
noticed	O
that	O
memory	O
allocated	O
while	O
iterating	O
through	O
a	O
Pandas	O
GroupBy	O
object	O
is	O
not	O
deallocated	O
after	O
iteration	O
.	O

I	O
use	O
resource.getrusage	O
(	O
resource.RUSAGE_SELF	O
)	O
.ru_maxrss	O
(	O
second	O
answer	O
in	O
this	O
post	O
for	O
details	O
)	O
to	O
measure	O
the	O
total	O
amount	O
of	O
active	O
memory	O
used	O
by	O
the	O
Python	O
process	O
.	O
prints	O
the	O
following	O
total	O
active	O
memory	O
(	O
in	O
gb	O
)	O
Uncommenting	O
del	O
idx	O
,	O
x	O
and	O
fixes	O
the	O
problem	O
.	O

I	O
do	O
however	O
have	O
to	O
del	O
all	O
variables	O
that	O
reference	O
the	O
DataFrames	O
returned	O
by	O
iterating	O
over	O
the	O
groupby	O
(	O
which	O
can	O
be	O
a	O
pain	O
depending	O
on	O
the	O
code	O
in	O
the	O
inner	O
for	O
loop	O
)	O
.	O

The	O
new	O
printed	O
memory	O
usages	O
become	O
:	O
Alternatively	O
I	O
can	O
uncomment	O
gb	O
=	O
list	O
(	O
gb	O
)	O
.	O

The	O
resulting	O
memory	O
usages	O
are	O
roughly	O
the	O
same	O
as	O
those	O
from	O
the	O
previous	O
solution	O
:	O
This	O
is	O
very	O
interesting	O
!	O

You	O
do	O
not	O
need	O
del	O
idx	O
,	O
x	O
.	O

Only	O
using	O
worked	O
to	O
keep	O
memory	O
constant	O
for	O
me	O
.	O

This	O
is	O
much	O
cleaner	O
that	O
having	O
the	O
del	O
statements	O
inside	O
the	O
loop	O
.	O
