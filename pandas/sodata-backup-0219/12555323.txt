Title:
Adding new column to existing DataFrame in python pandas

Q:
I have a DataFrame with named columns and rows indexed with not continuous numbers like from the code: 
@CODE
I would like to add new column 'e' to the existing df and do not change anything in the df. (The series got always the same length as a dataframe.) I try different version of `join`, `append`, `merge` but do not have this what I want, error at the most. 
The series and df is already given and above code is only to illustrate example. 
I am sure there is some easy way to that but can't figure it out

A1:
Doing this directly is via numpy will be most efficient: 
@CODE
Note my original (very old) suggestion was to use `map` (which is much slower): 
@CODE

A2:
Use the original df1 indexes to create the series: 
@CODE
Edit 2015 
Some reported to get the `SettingWithCopyWarning` with this code. 
However the code still runs perfect with the newer version. 
@CODE
The `SettingWithCopyWarning` aims to inform of a possibly invalid assignment on a copy of the Dataframe. It doesn't necessarily say you did it wrong (it can trigger false positives) but from 0.13.0 it let you know there are more adequate methods for the same purpose. Then, if you get the warning, just follow its advise: Try using .loc[row_index,col_indexer] = value instead 
@CODE
In fact this is currently the more efficient method as described in panda docs

A3:
This is the simple way of adding a new column: `df['e'] = e`

A4:
One thing to note, thought, is that if you do 
@CODE
this will effectively be a left join on the df1.index. So if you want to have an outer join effect, my probably imperfect solution is to create a dataframe with index values covering the universe of your data, and then use the code above. E.g. 
@CODE

A5:
I got the dread `SettingWithCopyWarning` and wasn't fixed by using the iloc syntax. My DataFrame was created by read_sql from an ODBC source. Using a suggestion by lowtech above the following worked for me: 
@CODE
This worked fine to insert the column at the end. I don't know if it is the most efficient but I don't like warning messages. I think there is a better solution but can't find it and I think it depends on some aspect of the index.

A6:
Before assigning a new column, if you have indexed data, you need to sort the index. At least in my case I had to: 
@CODE
