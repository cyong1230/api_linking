but	O
`	O
from	O
matplotlib.path	B-API
import	O
Path	B-API
`	O
throws	O
#CODE	O

The	O
Path	B-API
object	O
does	O
not	O
store	O
the	O
points	O
along	O
a	O
Bezier	O
curve	O
,	O
just	O
the	O
minimum	O
parameters	O
it	O
needs	O
.	O

Users	O
of	O
Path	B-API
objects	O
should	O
not	O
access	O
the	O
vertices	O
and	O
codes	O
arrays	O

The	O
trick	O
is	O
to	O
use	O
Path	B-API
and	O
PathPatch	B-API
.	O

This	O
allows	O
you	O
to	O
get	O
the	O
Matplotlib	O
Path	B-API
vertices	O
and	O
codes	O
in	O
the	O
projection	O
coordinates	O
which	O
you	O
can	O
then	O
convert	O
into	O
a	O
new	O
Path	B-API
.	O

I	O
was	O
playing	O
with	O
PathCollection	B-API
(	O
my	O
dyslexia	O
is	O
killing	O
me	O
switching	O
between	O
Path	B-API
and	O
Patch	O
)	O
,	O
and	O
if	O
I	O
can	O
get	O
a	O
unit	O
circle	O
drawn	O
and	O
I	O
can	O
apply	O
an	O
affine	O
transformation	O
to	O
it	O
,	O
then	O
I	O
think	O
it	O
should	O
work	O
,	O
as	O
it	O
doesn't	O
seem	O
to	O
inherently	O
fill	O
the	O
space	O
.	O

Thus	O
the	O
`	O
Spine	B-API
`	O
objects	O
are	O
in	O
question	O

You	O
can	O
use	O
the	O
`	O
set_position()	B-API
`	O
method	O
of	O
the	O
`	O
Spine	B-API
`	O
class	O
:	O
#CODE	O

You	O
mentioned	O
the	O
use	O
of	O
`	O
Locator	B-API
`	O
and	O
`	O
Formatter	B-API
`	O
objects	O
in	O
your	O
comment	O
.	O

You	O
need	O
to	O
call	O
remove	O
on	O
the	O
instance	O
of	O
the	O
`	O
Annotation	B-API
`	O
object	O
.	O

Using	O
Annotation	B-API
Instead	O
of	O
Ticklabels	O

What	O
is	O
the	O
difference	O
between	O
a	O
Text	B-API
instance	O
and	O
string	O
in	O
python	O
?	O

I	O
believe	O
the	O
anti-aliasing	O
of	O
Text	B-API
objects	O
is	O
up	O
to	O
the	O
font	O
engine	O
being	O
used	O
.	O

What	O
you	O
should	O
do	O
is	O
save	O
a	O
reference	O
to	O
the	O
first	O
`	O
Text	B-API
`	O
object	O
and	O
update	O
its	O
contents	O
by	O
calling	O
its	O
`	O
set_text()	B-API
`	O
method	O
.	O

There	O
is	O
a	O
references	O
to	O
the	O
Text	B-API
object	O
returned	O
by	O
the	O
original	O
setting	O
of	O
suptitle	B-API
in	O
figure.texts	O
.	O

I'm	O
having	O
a	O
problem	O
with	O
the	O
Text	B-API
object	O
that	O
matplotlib	O
use	O
to	O
represent	O
the	O
ticklabels	O
.	O

I	O
think	O
you	O
need	O
to	O
displace	O
the	O
`	O
Text	B-API
`	O
object	O
,	O
using	O
the	O
`	O
set_position	B-API
((	O
x	O
,	O
y	O
))`	O
method	O
.	O

This	O
includes	O
`	O
Text	B-API
`	O
objects	O
,	O
`	O
Line2D	B-API
`	O
objects	O
,	O
`	O
collection	O
`	O
objects	O
,	O
`	O
Patch	O
`	O
objects	O
...	O

Text	B-API
object	O
in	O
matplotlib	O
doesnt	O
respond	O
to	O
zooming	O
properly	O

After	O
drawing	O
a	O
matplotlib	O
Text	B-API
instance	O
and	O
then	O
interactively	O
panning	O
,	O
the	O
resulting	O
drawn	O
text	O
is	O
clipped	O
to	O
the	O
data	O
window	O
but	O
not	O
the	O
surrounding	O
bounding	O
box	O
.	O

Something	O
like	O
`	O
Text	B-API
(	O
2	O
,	O
0	O
,	O
u'Text	O
(	O
2	O
,	O
0	O
,	O
u	O
"	O
Text	B-API
(	O
0.4	O
,	O
u\	O
'	O
0.4	O
\	O
')")')`	O
.	O

`	O
plt.legend	B-API
`	O
returns	O
a	O
`	O
Legend	B-API
`	O
object	O
with	O
methods	O
that	O
allow	O
you	O
to	O
modify	O
the	O
appearance	O
of	O
the	O
legend	O
.	O

So	O
first	O
we'll	O
save	O
the	O
`	O
Legend	B-API
`	O
object	O
:	O
#CODE	O

In	O
practice	O
I	O
seem	O
to	O
end	O
up	O
mixing	O
them	O
both	O
myself	O
in	O
SW	O
;	O
it's	O
largely	O
a	O
matter	O
of	O
taste	O
whether	O
you	O
go	O
through	O
the	O
pyplot	B-API
API	O
or	O
access	O
the	O
objects	O
.	O
pyplot	B-API
is	O
certainly	O
very	O
convenient	O
although	O
as	O
you	O
want	O
to	O
do	O
more	O
complex	O
/	O
exotic	O
things	O
you'll	O
find	O
what	O
you	O
can	O
do	O
with	O
pyplot	B-API
alone	O
limited	O
and	O
you'll	O
need	O
to	O
get	O
to	O
know	O
at	O
least	O
the	O
full	O
API's	O
Axes	B-API
,	O
Figure	B-API
,	O
Legend	B-API
and	O
Path	B-API
objects	O
better	O
.	O

There	O
was	O
a	O
refactor	O
of	O
the	O
`	O
Legend	B-API
`	O
class	O
awhile	O
back	O
.	O

call	O
`	O
Legend.get_texts()	B-API
`	O
will	O
get	O
a	O
list	O
of	O
Text	B-API
object	O
in	O
the	O
legend	B-API
object	O
:	O
#CODE	O

Some	O
parameters	O
could	O
easily	O
be	O
read	O
from	O
the	O
`	O
Legend	B-API
`	O
object	O
,	O
others	O
(	O
like	O
`	O
title	O
`	O
,	O
`	O
fancybox	O
`)	O
required	O
some	O
'	O
artistics	O
'	O
.	O

42	O
from	O
matplotlib.legend	B-API
import	O
Legend	B-API

How	O
do	O
I	O
choose	O
the	O
optimum	O
width	O
for	O
a	O
matplotlib	O
Button	B-API
?	O

I	O
removed	O
`	O
color=axcolor	O
`	O
from	O
the	O
`	O
Button	B-API
`	O
call	O
;	O
and	O
I	O
added	O
a	O
`	O
plt.show()	B-API
`	O
before	O
the	O
event	O
connect	O
,	O
otherwise	O
a	O
figure	O
window	O
didn't	O
appear	O
for	O
me	O
(	O
neither	O
through	O
`	O
ipython	O
`	O
,	O
nor	O
with	O
`	O
python	O
`)	O
.	O

button	O
=	O
Button	B-API
(	O
ax=reset_axis	O
,	O
label=	O
'	O
Reset	O
'	O
,	O
color=	O
'	O
lightblue	O
'	O
,	O
hovercolor=	O
'	O
0.975	O
')	O

`	O
tbar.add_button	O
(	O
a	O
Button	B-API
object	O
);	O
`	O

For	O
your	O
buttons	O
to	O
work	O
,	O
you	O
need	O
to	O
keep	O
a	O
reference	O
to	O
the	O
`	O
Button	B-API
`	O
object	O
around	O
.	O

I	O
know	O
how	O
to	O
add	O
and	O
work	O
with	O
single	O
cursor	O
`	O
self.cursor	O
=	O
Cursor	B-API
(	O
self.static_canvas.Dataplot	O
,	O
useblit=True	O
,	O
color=	O
'	O
red	O
'	O
,	O
linewidth=2	O
)`	O
,	O
but	O
what	O
I	O
should	O
do	O
to	O
create	O
to	O
cursors	O
?	O

I	O
think	O
tillsten	O
is	O
right	O
--	O
study	O
how	O
the	O
[	O
`	O
Cursor	B-API
`	O
class	O
]	O
(	O
#URL	O
)	O
does	O
it	O
.	O

I've	O
checked	O
briefly	O
,	O
but	O
I	O
don't	O
know	O
how	O
to	O
modify	O
the	O
properties	O
of	O
an	O
`	O
Arc	B-API
`	O
instance	O
,	O
although	O
I'm	O
sure	O
it's	O
possible	O
.	O

You	O
could	O
also	O
try	O
passing	O
a	O
`	O
Arrow	B-API
`	O
instance	O
as	O
marker	O
,	O
but	O
I'm	O
not	O
sure	O
whether	O
that	O
works	O
.	O

Currently	O
,	O
I	O
don't	O
think	O
it	O
possible	O
as	O
the	O
`	O
Arrow	B-API
`	O
class	O
only	O
supports	O
`'	O
solid	O
'	O
|	O
'	O
dashed	O
'	O
|	O
'	O
dashdot	O
'	O
|	O
'	O
dotted	O
'`	O
four	O
different	O
linestyles	O
.	O

The	O
Node	B-API
class	O
has	O
the	O
coordinates	O
stored	O
as	O
members	O
(	O
x	O
and	O
y	O
)	O
,	O
as	O
well	O
as	O
index	O
.	O

You	O
can	O
scale	O
your	O
z	O
values	O
to	O
fit	O
this	O
range	O
with	O
Normalize	B-API
.	O

You	O
should	O
mention	O
the	O
`	O
Normalize	B-API
`	O
methods	O
here	O
as	O
well	O
.	O

Matplotlib	O
provides	O
the	O
class	O
`	O
Normalize	B-API
`	O
for	O
that	O
:	O
#CODE	O

Create	O
a	O
new	O
instance	O
of	O
`	O
Normalize	B-API
`	O
for	O
each	O
image	O
you	O
want	O
to	O
process	O
.	O

And	O
then	O
you	O
can	O
also	O
replicate	O
the	O
functionality	O
of	O
`	O
Normalize	B-API
`	O
(	O
since	O
you	O
seem	O
to	O
not	O
like	O
it	O
):	O
#CODE	O

Use	O
these	O
to	O
create	O
a	O
`	O
Normalize	B-API
`	O
instance	O
(	O
other	O
normalisation	O
classes	O
are	O
available	O
,	O
e.g.	O
log	O
scale	O
)	O
.	O

The	O
documentation	O
of	O
Normalize	B-API
might	O
be	O
a	O
bit	O
deceiving	O
here	O
:	O
`	O
process_value	O
`	O
is	O
a	O
function	O
which	O
is	O
only	O
used	O
for	O
preprocessing	O
(	O
and	O
static	O
)	O
.	O

I	O
have	O
several	O
questions	O
regarding	O
the	O
Normalize	B-API
class	O
in	O
Matplotlib	O
.	O

with	O
your	O
own	O
`	O
Normalize	B-API
`	O
function	O
.	O

This	O
might	O
be	O
why	O
they've	O
avoided	O
implementing	O
it	O
as	O
part	O
of	O
Normalize	B-API
.	O

matplotlib	O
:	O
can	O
I	O
create	O
AxesSubplot	O
objects	O
,	O
then	O
add	O
them	O
to	O
a	O
Figure	B-API
instance	O
?	O

Also	O
do	O
you	O
use	O
Figure	B-API
from	O
the	O
local	O
matplotlib	O
installation	O
or	O
not	O
?	O

Additionally	O
,	O
there	O
are	O
functions	O
from	O
the	O
pyplot	B-API
interface	O
and	O
there	O
are	O
methods	O
on	O
the	O
`	O
Figure	B-API
`	O
class	O
.	O

I'll	O
assume	O
in	O
the	O
following	O
that	O
`	O
fig	O
`	O
is	O
an	O
instance	O
of	O
a	O
`	O
Figure	B-API
`	O
:	O

Both	O
the	O
Figure	B-API
and	O
the	O
Axes	B-API
class	O
have	O
a	O
`	O
clear()	O
`	O
method	O
.	O

I	O
had	O
this	O
same	O
problem	O
,	O
and	O
it	O
was	O
caused	O
by	O
calling	O
`	O
show()	O
`	O
on	O
the	O
Figure	B-API
object	O
instead	O
of	O
the	O
pyplot	B-API
object	O
.	O

It	O
got	O
wrapped	O
up	O
in	O
a	O
subclass	O
of	O
Figure	B-API
,	O
which	O
also	O
got	O
level-of-detail	O
functionality	O
and	O
context	O
menus	O
.	O

I	O
have	O
an	O
external	O
function	O
which	O
returns	O
a	O
Figure	B-API
object	O
,	O
and	O
in	O
this	O
situation	O
,	O
each	O
Figure	B-API
object	O
is	O
composed	O
of	O
exactly	O
one	O
Axes	B-API
object	O
.	O

While	O
a	O
search	O
did	O
lead	O
me	O
to	O
see	O
that	O
pyplot.figure()	B-API
is	O
the	O
development	O
team's	O
recommended	O
instantiation	O
technique	O
,	O
it	O
doesn't	O
change	O
the	O
question	O
:	O
is	O
there	O
any	O
way	O
to	O
do	O
Axes	B-API
/	O
Figure	B-API
copy	O
construction	O
and	O
Figure	B-API
construction	O
via	O
composition	O
of	O
copied	O
Axes	B-API
?	O

A	O
reference	O
to	O
it	O
isn't	O
stored	O
in	O
the	O
`	O
Figure	B-API
`	O
object	O
,	O
but	O
is	O
stored	O
in	O
the	O
`	O
Canvas	O
`	O
object	O
so	O
you	O
can	O
destroy	O
a	O
window	O
via	O
#CODE	O

Removing	O
the	O
`	O
frameon=False	O
`	O
option	O
from	O
`	O
f	O
=	O
Figure	B-API
(	O
figsize	O
=(	O
12	O
,	O
5	O
)	O
,	O
dpi=100	O
,	O
frameon=False	O
)`	O
solved	O
the	O
issue	O
.	O

I	O
used	O
the	O
Bar	B-API
class	O
to	O
plot	O
length	O
of	O
videos	O
vs	O
views	O
which	O
are	O
the	O
x	O
and	O
y	O
values	O
of	O
the	O
tuples	O
.	O

Animation	B-API
will	O
not	O
work	O
on	O
inplace	O
(	O
or	O
inline	O
?	O
)	O
on	O
notebook	O
.	O

By	O
artifacts	O
,	O
I	O
now	O
understand	O
to	O
mean	O
you	O
are	O
creating	O
a	O
second	O
`	O
Animation	B-API
`	O
object	O
and	O
what	O
you	O
get	O
is	O
both	O
of	O
them	O
running	O
in	O
parallel	O
(	O
which	O
I	O
am	O
not	O
sure	O
what	O
I	O
expect	O
to	O
happen	O
there	O
)	O
.	O

by	O
`	O
ax	O
`	O
I	O
mean	O
the	O
current	O
`	O
Axis	B-API
`	O
object	O
,	O
which	O
you	O
were	O
getting	O
at	O
via	O
`	O
gca	B-API
`	O
.	O

Your	O
legend	B-API
command	O
is	O
using	O
the	O
markers	O
,	O
not	O
the	O
lines	O
as	O
inputs	O
by	O
using	O
`	O
plot	O
[	O
0	O
]`	O
.	O

`	O
Axes	B-API
`	O
objects	O
know	O
about	O
things	O
like	O
tick	O
location	O
and	O
labels	O
and	O
the	O
display	O
range	O
(	O
which	O
it	O
does	O
by	O
knowing	O
about	O
`	O
Axis	B-API
`	O
object	O
,	O
but	O
that	O
is	O
getting	O
even	O
more	O
into	O
the	O
weeds	O
)	O
.	O

Use	O
Axis	B-API
method	O
`	O
set_xscale	B-API
`	O
or	O
`	O
set_yscale	B-API
`	O
.	O

`	O
ax.set_xticks()	B-API
`	O
is	O
a	O
method	O
of	O
the	O
`	O
Axes	B-API
`	O
object	O
,	O
whilst	O
`	O
matplotlib.ticker.FixedLocator	B-API
`	O
is	O
an	O
object	O
which	O
is	O
used	O
with	O
the	O
`	O
Axis	B-API
`	O
object	O
(	O
`	O
Axes	B-API
`	O
is	O
basically	O
the	O
whole	O
graph	O
,	O
whilst	O
`	O
Axis	B-API
`	O
is	O
just	O
one	O
of	O
the	O
(	O
two	O
)	O
axis	O
(	O
x	O
or	O
y	O
)	O
.	O

This	O
is	O
not	O
particularly	O
well	O
documented	O
,	O
but	O
`	O
Polygon	B-API
`	O
objects	O
have	O
a	O
pair	O
of	O
methods	O
`	O
get_xy	B-API
`	O
and	O
`	O
set_xy	B-API
`	O
.	O

In	O
particular	O
,	O
if	O
/	O
when	O
there	O
are	O
so	O
many	O
circles	O
for	O
the	O
figure	O
to	O
become	O
connected	O
,	O
the	O
`	O
for	O
polygon	O
in	O
polygons	O
:	O
`	O
fails	O
with	O
a	O
`	O
TypeError	O
:	O
'	O
Polygon	B-API
'	O
object	O
is	O
not	O
iterable	O
`	O
.	O

Just	O
use	O
the	O
`	O
Polygon	B-API
`	O
or	O
`	O
Rectangle	B-API
`	O
classes	O
:	O
#CODE	O

As	O
you	O
can	O
see	O
,	O
the	O
edge	O
is	O
center-positioned	O
along	O
the	O
border	O
of	O
the	O
domain	O
of	O
the	O
Rectangle	B-API
object	O
,	O
and	O
so	O
bleeds	O
into	O
this	O
domain	O
.	O

You	O
can	O
do	O
this	O
by	O
overplotting	O
a	O
Rectangle	B-API
patch	O
on	O
the	O
cell	O
that	O
you	O
would	O
want	O
to	O
highlight	O
.	O

Currently	O
I	O
use	O
the	O
`	O
add_patch	B-API
(	O
Rectangle	B-API
(	O
...	O
))`	O
,	O
but	O
it	O
does	O
not	O
fit	O
really	O
well	O
.	O

Unfortunately	O
it	O
seems	O
that	O
the	O
'	O
Rectangle	B-API
'	O
object	O
has	O
no	O
attribute	O
'	O
set_bottom	O
'	O
.	O

You	O
can	O
acces	O
ALL	O
the	O
properties	O
of	O
a	O
`	O
Tick	B-API
`	O
object	O
using	O
this	O
approach	O
:	O
#CODE	O

Fortunately	O
you	O
can	O
update	O
figures	O
you've	O
moved	O
to	O
where	O
you	O
want	O
them	O
pretty	O
easily	O
,	O
by	O
using	O
the	O
object	O
interface	O
specifically	O
,	O
and	O
updating	O
the	O
Axes	B-API
object	O
without	O
creating	O
a	O
new	O
figure	O
.	O

(	O
You	O
can	O
also	O
always	O
find	O
this	O
data	O
inside	O
the	O
`	O
Axes	B-API
`	O
object	O
if	O
you	O
know	O
where	O
to	O
look	O
.	O
)	O

By	O
deferring	O
the	O
expense	O
of	O
drawing	O
you	O
can	O
greatly	O
improve	O
the	O
performance	O
of	O
functions	O
that	O
make	O
many	O
calls	O
to	O
`	O
Figure	B-API
`	O
and	O
`	O
Axes	B-API
`	O
methods	O
.	O

`	O
Figure.add_subplot()	B-API
`	O
returns	O
an	O
`	O
Axes	B-API
`	O
instance	O
,	O
and	O
`	O
pyplot.subplots()	B-API
`	O
returns	O
an	O
`	O
Axis	B-API
`	O
object	O
as	O
second	O
output	O
parameter	O
.	O

As	O
a	O
side	O
note	O
,	O
it	O
is	O
better	O
to	O
pass	O
`	O
Axes	B-API
`	O
objects	O
into	O
your	O
function	O
than	O
create	O
them	O
(	O
implicitly	O
)	O
internally	O
.	O

Here	O
,	O
what	O
you	O
have	O
done	O
is	O
capture	O
the	O
`	O
Axes	B-API
`	O
instance	O
that	O
is	O
returned	O
from	O
`	O
add_subplot()	B-API
`	O
.	O

If	O
I	O
create	O
an	O
`	O
Axes	B-API
`	O
object	O
in	O
`	O
matplotlib	O
`	O
and	O
mutate	O
it	O
(	O
i.e.	O
by	O
plotting	O
some	O
data	O
)	O
and	O
then	O
I	O
call	O
a	O
function	O
without	O
passing	O
my	O
`	O
Axes	B-API
`	O
object	O
to	O
that	O
function	O
then	O
that	O
function	O
can	O
still	O
mutate	O
my	O
`	O
Axes	B-API
`	O
.	O

Pass	O
multiple	O
matplotlib	O
Axes	B-API
objects	O
from	O
generator	O
function	O
and	O
display	O
them	O

The	O
`	O
transform	B-API
`	O
in	O
this	O
case	O
is	O
a	O
`	O
BboxTransformTo	O
`	O
object	O
,	O
which	O
:	O

You	O
can	O
use	O
the	O
`	O
transform	B-API
`	O
keyword	O
:	O
#CODE	O

But	O
when	O
I	O
checked	O
the	O
source	O
code	O
of	O
draw_networkx_nodes	O
draw_networkx	O
,	O
I	O
realized	O
that	O
it	O
is	O
not	O
a	O
straight	O
forward	O
task	O
as	O
the	O
draw	B-API
function	O
stores	O
the	O
positions	O
(	O
nodes	O
and	O
edges	O
)	O
in	O
a	O
numpy	O
array	O
,	O
send	O
it	O
to	O
the	O
ax.scatter	B-API
function	O
of	O
matplotlib	O
(	O
sourcecode	O
)	O
which	O
is	O
a	O
bit	O
hard	O
to	O
manipulate	O
without	O
messing	O
something	O
up	O
.	O

This	O
simply	O
calls	O
the	O
draw	B-API
method	O
of	O
the	O
figure	O
periodically	O
.	O

Then	O
I	O
just	O
added	O
a	O
signal	O
to	O
the	O
custom	O
version	O
and	O
overrode	O
the	O
draw	B-API
method	O
.	O

EDIT	O
:	O
I'm	O
super	O
blind	O
,	O
sorry	O
for	O
that	O
,	O
you're	O
calling	O
the	O
draw	B-API
method	O
,	O
however	O
it	O
is	O
a	O
good	O
idea	O
to	O
add	O
*	O
args	O
and	O
**	O
kwargs	O
to	O
any	O
overriden	O
methods	O
..	O
try	O
that	O
,	O
and	O
perhaps	O
call	O
FancyBboxPatch.draw	O
at	O
the	O
end	O
of	O
overriden	O
method	O

I'm	O
also	O
panning	O
and	O
zooming	O
into	O
this	O
figure	O
,	O
and	O
have	O
been	O
using	O
the	O
draw	B-API
method	O
to	O
show	O
the	O
new	O
perspectives	O
from	O
zooming	O
in	O
(	O
using	O
set_xlim	B-API
and	O
set_ylim	B-API
)	O
and	O
from	O
panning	O
(	O
drag_pan	B-API
and	O
start_pan	B-API
)	O
.	O

I	O
would	O
use	O
`	O
ax.autoscale	B-API
(	O
enable=False	O
)`	O
before	O
your	O
call	O
to	O
`	O
scatter	B-API
`	O
.	O

You	O
can	O
perhaps	O
loop	O
into	O
your	O
`	O
AxesSubplot	O
`	O
objects	O
and	O
call	O
`	O
autoscale	B-API
`	O
passing	O
the	O
`	O
axis	O
`	O
parameter	O
:	O
#CODE	O

@USER	O
-	O
If	O
you'd	O
like	O
to	O
rescale	O
the	O
axes	B-API
,	O
call	O
`	O
ax.autoscale()	B-API
`	O
every	O
time	O
you	O
remove	O
a	O
point	O
.	O

Python	O
:	O
Add	O
x-y	O
margins	B-API
automatically	O
with	O
autoscale	B-API
(	O
pyplot	B-API
)	O

Ahh	O
,	O
it's	O
the	O
call	O
to	O
`	O
autoscale	B-API
`	O
that	O
I'm	O
missing	O
.	O

The	O
trick	O
is	O
at	O
the	O
end	O
,	O
in	O
the	O
custom	O
refresh	B-API
method	O
!	O

For	O
what	O
you're	O
wanting	O
to	O
do	O
,	O
you'd	O
be	O
far	O
better	O
off	O
using	O
annotate	B-API
.	O

It's	O
quite	O
simple	O
to	O
do	O
manually	O
with	O
`	O
annotate	B-API
`	O
.	O

If	O
you're	O
wanting	O
to	O
adjust	O
vertical	O
alignment	O
,	O
horizontal	O
alignment	O
,	O
etc	O
,	O
just	O
add	O
those	O
as	O
arguments	O
to	O
`	O
annotate	B-API
`	O
(	O
e.g.	O
`	O
horizontalalignment=	O
'	O
right	O
'`	O
or	O
equivalently	O
`	O
ha=	O
'	O
right	O
'`)	O

It's	O
quite	O
simple	O
to	O
do	O
manually	O
with	O
`	O
annotate	B-API
`	O
.	O

You	O
can	O
use	O
the	O
annotate	B-API
command	O
to	O
place	O
text	O
annotations	O
at	O
any	O
x	O
and	O
y	O
values	O
you	O
want	O
.	O

+1	O
Just	O
as	O
a	O
side	O
note	O
,	O
annotate	B-API
has	O
"	O
offseting	O
the	O
annotations	O
a	O
little	O
"	O
built-in	O
.	O

While	O
there's	O
nothing	O
wrong	O
with	O
Ofri's	O
answer	O
,	O
`	O
annotate	B-API
`	O
is	O
intended	O
especially	O
for	O
this	O
purpose	O
:	O
#CODE	O

Just	O
use	O
`	O
annotate	B-API
`	O
and	O
specify	O
axis	O
coordinates	O
.	O

It	O
is	O
also	O
possible	O
to	O
make	O
an	O
arrow	O
with	O
text	O
,	O
using	O
the	O
annotate	B-API
method	O
.	O

The	O
closest	O
thing	O
I	O
have	O
been	O
able	O
to	O
find	O
while	O
searching	O
here	O
is	O
the	O
annotate	B-API
command	O
,	O
but	O
that	O
appears	O
to	O
create	O
a	O
fixed	O
label	O
on	O
the	O
plot	O
.	O

`	O
plt.annotate	B-API
(	O
'	O
Something	O
'	O
,	O
(	O
0	O
,	O
0	O
)	O
,	O
(	O
0	O
,	O
-20	O
)	O
,	O
xycoords=	O
'	O
axes	B-API
fraction	O
'	O
,	O
textcoords=	O
'	O
offset	O
points	O
'	O
,	O
va=	O
'	O
top	O
')`	O

@USER	O
I'm	O
not	O
sure	O
why	O
we	O
have	O
to	O
explicitly	O
call	O
`	O
draw	B-API
`	O
.	O

The	O
`	O
boxplot	B-API
`	O
function	O
only	O
plots	O
quartiles	O
(	O
0	O
,	O
25	O
,	O
50	O
,	O
75	O
,	O
100	O
)	O
.	O

Is	O
there	O
any	O
way	O
I	O
can	O
extract	O
these	O
values	O
for	O
use	O
in	O
my	O
downstream	O
code	O
from	O
the	O
boxplot	B-API
object	O
?	O

I	O
am	O
plotting	O
a	O
non-normal	O
distribution	O
using	O
boxplot	B-API
and	O
interested	O
in	O
finding	O
out	O
about	O
outliers	O
using	O
boxplot	B-API
function	O
of	O
matplotlib	O
.	O

You	O
should	O
use	O
the	O
`	O
hist	B-API
`	O
function	O
.	O

An	O
similar	O
example	O
of	O
such	O
plot	O
is	O
"	O
hist	B-API
(	O
x	O
,	O
orientation=	O
'	O
horizontal	O
')"	O
.	O

I	O
need	O
to	O
use	O
the	O
`	O
hist	B-API
`	O
function	O
,	O
I	O
have	O
looked	O
elsewhere	O
on	O
this	O
site	O
but	O
I	O
haven't	O
found	O
anything	O
.	O

I	O
tried	O
doing	O
hist	B-API
(	O
x	O
/	O
x.sum()	O
)	O
but	O
that	O
reduce	O
the	O
values	O
of	O
the	O
numbers	O
in	O
the	O
x	O
axis	O
and	O
does	O
not	O
change	O
their	O
frequency	O
,	O
so	O
the	O
y-axis	O
is	O
unchanged	O

How	O
can	O
I	O
prevent	O
the	O
labels	O
of	O
`	O
xticks	B-API
`	O
from	O
overlapping	O
with	O
the	O
labels	O
of	O
`	O
yticks	B-API
`	O
when	O
using	O
`	O
hist	B-API
`	O
(	O
or	O
other	O
plotting	O
commands	O
)	O
in	O
matplotlib	O
?	O

An	O
easy	O
way	O
to	O
do	O
this	O
is	O
to	O
add	O
`	O
0j	O
`	O
to	O
the	O
argument	O
of	O
the	O
`	O
sqrt	B-API
`	O
,	O
like	O
this	O
,	O
`	O
sqrt	B-API
(	O
1+0j-	O
(	O
1	O
/	O
x	O
)	O
**2	O
)`	O
.	O

You	O
need	O
to	O
set	O
the	O
new	O
coordinates	O
of	O
the	O
datapoints	O
in	O
the	O
internal	O
`	O
_ofsets3d	O
`	O
variable	O
of	O
the	O
`	O
Line3DCollection	O
`	O
object	O
returned	O
by	O
the	O
`	O
scatter	B-API
`	O
function	O
.	O

You	O
can	O
use	O
`	O
scatter	B-API
`	O
for	O
this	O
,	O
but	O
that	O
requires	O
having	O
numerical	O
values	O
for	O
your	O
`	O
key1	O
`	O
,	O
and	O
you	O
won't	O
have	O
a	O
legend	B-API
,	O
as	O
you	O
noticed	O
.	O

The	O
`	O
scatter	B-API
`	O
and	O
`	O
hist	B-API
`	O
commands	O
really	O
expect	O
`	O
x	O
`	O
and	O
`	O
y	O
`	O
to	O
be	O
1D	O
arrays	O
.	O

I'm	O
wondering	O
if	O
it	O
is	O
possible	O
to	O
have	O
individual	O
alpha	O
values	O
for	O
each	O
point	O
to	O
be	O
plotted	O
using	O
the	O
scatter	B-API
function	O
of	O
Matplotlib	O
.	O

The	O
problem	O
happens	O
when	O
I	O
call	O
the	O
scatter	B-API
function	O
.	O
