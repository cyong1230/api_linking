If	O
you	O
are	O
trying	O
to	O
create	O
an	O
animation	O
,	O
look	O
in	O
to	O
the	O
`	O
animation	B-API
`	O
module	O
of	O
matplotlib	O
,	O
it	O
takes	O
care	O
of	O
a	O
lot	O
of	O
the	O
details	O
for	O
you	O
.	O

Apparently	O
,	O
the	O
"	O
Animation	B-API
"	O
class	O
of	O
Matplotlib	O
runs	O
the	O
animation	O
in	O
a	O
separate	O
thread	O
.	O

It	O
simply	O
don't	O
use	O
the	O
Animation	B-API
class	O
and	O
builds	O
its	O
own	O
animation	O
from	O
crash	O
.	O

I	O
think	O
`	O
axis	O
([	O
xo	O
,	O
x1	O
,	O
y0	O
,	O
y1	O
])`	O
is	O
in	O
terms	O
of	O
proportion	O
of	O
the	O
Figure	B-API
,	O
not	O
the	O
data	O
transform	O
.	O

I	O
used	O
the	O
scatter	B-API
function	O
and	O
plotted	O
the	O
points	O
,	O
but	O
the	O
surface	O
function	O
is	O
not	O
working	O
(	O
the	O
window	O
is	O
empty	O
)	O
.	O

The	O
solution	O
I	O
found	O
for	O
this	O
involves	O
using	O
Normalize	B-API
to	O
make	O
a	O
normalised	O
colour	O
list	O
based	O
on	O
the	O
relevant	O
data	O
,	O
mapping	O
it	O
to	O
a	O
ScalarMappable	B-API
,	O
and	O
using	O
that	O
to	O
set	O
the	O
face	O
colour	O
and	O
c	O
limits	O
on	O
each	O
frame	O
of	O
the	O
animation	O
.	O

But	O
because	O
all	O
of	O
the	O
functionality	O
relies	O
on	O
the	O
hook	O
,	O
when	O
the	O
canvas	O
is	O
finally	O
shown	O
I	O
presume	O
Python's	O
garbage	O
collection	O
has	O
removed	O
the	O
Animation	B-API
instance	O
---	O
since	O
it	O
was	O
never	O
assigned	O
to	O
a	O
variable	O
---	O
and	O
therefore	O
the	O
animation	O
can	O
never	O
be	O
started	O
.	O

Notice	O
`	O
xytext	O
=	O
(	O
0	O
,	O
0	O
)`	O
means	O
no	O
offset	O
,	O
and	O
omitting	O
`	O
arrowprops	O
`	O
causes	O
`	O
plt.annotate	B-API
`	O
to	O
not	O
draw	O
an	O
arrow	O
.	O
