You	O
could	O
check	O
whether	O
this	O
is	O
the	O
case	O
,	O
and	O
append	O
to	O
your	O
sample	O
in	O
a	O
loop	O
if	O
necessary	O
.	O

The	O
above	O
code	O
works	O
,	O
but	O
would	O
be	O
better	O
to	O
append	O
the	O
data_array	O
retrieved	O
from	O
for	O
loop	O
directly	O
into	O
the	O
numpy	O
array	O
rather	O
than	O
using	O
python	O
list	O
.	O

If	O
you	O
want	O
an	O
intersection	O
between	O
the	O
two	O
arrays	O
you	O
can	O
loop	O
;	O
for	O
i	O
data	O
:	O
and	O
get	O
i	O
from	O
first	O
array	O
,	O
and	O
i	O
from	O
second	O
array.But	O
I'm	O
not	O
sure	O
if	O
I	O
follow	O
it	O
correctly	O
,	O
you	O
have	O
some	O
data	O
which	O
has	O
0	O
occurences	O
in	O
some	O
columns	O
of	O
your	O
array	O
,	O
if	O
you	O
append	O
the	O
other	O
values	O
to	O
a	O
new	O
array	O
the	O
memory	O
of	O
where	O
in	O
the	O
data	O
those	O
values	O
came	O
from	O
is	O
already	O
automatically	O
stored	O
.	O

(	O
2	O
)	O
Collect	O
the	O
parts	O
of	O
the	O
SQL	O
command	O
in	O
a	O
list	O
and	O
do	O
a	O
`	O
str.join	B-API
`	O
in	O
the	O
end	O
,	O
to	O
avoid	O
allocating	O
an	O
increasingly	O
long	O
string	O
each	O
time	O
(	O
you	O
can't	O
really	O
append	O
to	O
a	O
string	O
in	O
Python	O
as	O
they	O
are	O
immutable	O
)	O
.	O

append	O
C	O
:\	O
libav\usr\bin\	O
to	O
the	O
'	O
Path	O
'	O
environment	O
variable	O

How	O
to	O
efficiently	O
join	O
a	O
list	O
of	O
values	O
to	O
a	O
list	O
of	O
intervals	O
?	O

The	O
alignment	O
angles	O
may	O
be	O
unique	O
,	O
a	O
discrete	O
set	O
,	O
or	O
a	O
continuum	O
as	O
below	O
.	O

Alternatively	O
,	O
you	O
could	O
assign	O
the	O
flip	O
cards	O
their	O
own	O
unique	O
IDs	O
and	O
store	O
them	O
in	O
the	O
same	O
record	O
array	O
as	O
the	O
regular	O
cards	O
,	O
as	O
the	O
properties	O
seem	O
to	O
have	O
the	O
same	O
names	O
,	O
and	O
then	O
have	O
a	O
`	O
flip_id	O
`	O
field	O
that	O
would	O
be	O
some	O
set	O
value	O
such	O
as	O
`	O
0	O
`	O
or	O
`	O
None	O
`	O
for	O
cards	O
without	O
flip	O
aspects	O
and	O
then	O
the	O
ID	O
of	O
the	O
flip	O
card	O
for	O
those	O
cards	O
that	O
do	O
have	O
a	O
flip	O
.	O

You	O
can	O
notice	O
that	O
there	O
is	O
gray	O
strip	O
on	O
top	O
and	O
on	O
the	O
left	O
...	O

Furthermore	O
you	O
then	O
go	O
and	O
compute	O
the	O
norm	O
of	O
those	O
three	O
values	O
.	O
