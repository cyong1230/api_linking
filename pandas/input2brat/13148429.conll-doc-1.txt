How to change the order of DataFrame columns ?
I have the following ` DataFrame ` ( ` df `) :
@CODE
I add more column(s) by assignment :
@CODE
How can I move the column ` mean ` to the front , i.e. set it as first column leaving the order of the other columns untouched ?
One easy way would be to reassign the dataframe with a list of the columns , rearranged as needed .
This is what you have now :
@CODE
Rearrange ` cols ` in any way you want .
This is how I moved the last element to the first position :
@CODE
Then reorder the dataframe like this :
@CODE
How about :
@CODE
http://pandas.pydata.org/pandas-docs/stable/dsintro.html#column-selection-addition-deletion
This question has been answered before :
@CODE
You could also do something like this :
@CODE
You can get the list of columns with :
@CODE
The output will produce :
@CODE
... which is then easy to rearrange manually before dropping it into the first function
@CODE
This function takes two arguments , the first is the dataset , the second are the columns in the data set that you want to bring to the front .
So in my case I have a data set called Frame with variables A1 , A2 , B1 , B2 , Total and Date .
If I want to bring Total to the front then all I have to do is :
@CODE
If I want to bring Total and Date to the front then I do :
@CODE
I ran into a similar question myself , and just wanted to add what I settled on .
I liked the reindex_axis ( ) method for changing column order .
This worked :
` df = df.reindex_axis(['mean ' ] + list ( df.columns [: -1] ) , axis=1 )`
I believe @Aman ' s answer is the best if you know the location of the other column .
If you don't know the location of ` mean ` , but only have its name , you cannot resort directly to ` cols = cols[-1 :] + cols [: -1] ` .
Following is the next-best thing I could come up with :
@CODE
Simply do ,
@CODE
Just assign the column names in the order you want them , to ` dataframe .columns ` like below :
@CODE
Now , ' mean ' column comes out in the front :
@CODE
