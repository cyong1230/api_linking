Is this the fastest way to group in Pandas ?
The following code works well .
Just checking : am I using and timing Pandas correctly and is there any faster way ?
Thanks .
@CODE
Now time 5 different groupings , repeating each one twice to confirm the timing .
[ I realise ` timeit ( 2 )` runs it twice , but then it reports the total . I'm interested in the time of the first and second run separately . ] Python uses about 10G of RAM according to ` htop ` during these tests .
@CODE
Here is system info :
@CODE
I don't believe it's relevant but just in case , the ` randChar ` function above is a workaround for a memory error in ` mtrand.RandomState.choice ` :
How to solve memory error in mtrand.RandomState.choice ?
Yes , judging by your code , you may be fairly new , but even so your code is very good .
There are better alternatives , much like @Paul H said , but this code is fairly efficient .
I grant you a metaphoric gold star !
If you'd like to install the iPython shell , you can easily time your code using %timeit .
After installing it , instead of typing ` python ` to launch the python interpreter , you would type ` ipython ` .
Then you can type your code exactly as you would type it in the normal interpreter ( as you did above ) .
Then you can type , for example :
@CODE
This will accomplish exactly the same thing as what you've done , but if you're using python a lot I find that this will save you significant typing time :) .
Ipython has a lot of other nice features ( like ` %paste ` , which I used to paste in your code and test this , or ` %run ` to run a script you've saved in a file ) , tab completion , etc .
http://ipython.org
