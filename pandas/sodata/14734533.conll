How	O
to	O
access	O
pandas	O
groupby	B-API
dataframe	B-API
by	O
key	O

How	O
do	O
I	O
access	O
the	O
corresponding	O
groupby	B-API
dataframe	B-API
in	O
a	O
groupby	B-API
object	O
by	O
the	O
key	O
?	O

With	O
the	O
following	O
groupby	B-API
:	O

@CODE	O

I	O
can	O
iterate	O
through	O
it	O
to	O
get	O
the	O
keys	O
and	O
groups	O
:	O

@CODE	O

I	O
would	O
like	O
to	O
be	O
able	O
to	O
do	O
something	O
like	O

@CODE	O

But	O
when	O
I	O
do	O
that	O
(	O
well	O
,	O
actually	O
I	O
have	O
to	O
do	O
`gb[('foo	O
'	O
,	O
)	O
]	O
`)	O
,	O
I	O
get	O
this	O
weird	O
`	O
pandas.core.groupby.DataFrameGroupBy	O
`	O
thing	O
which	O
doesn't	O
seem	O
to	O
have	O
any	O
methods	O
that	O
correspond	O
to	O
the	O
DataFrame	B-API
I	O
want	O
.	O

The	O
best	O
I	O
can	O
think	O
of	O
is	O

@CODE	O

but	O
this	O
is	O
kind	O
of	O
nasty	O
,	O
considering	O
how	O
nice	O
pandas	O
usually	O
is	O
at	O
these	O
things	O
.	O

What's	O
the	O
built-in	O
way	O
of	O
doing	O
this	O
?	O

You	O
can	O
use	O
the	O
`	O
get_group	O
`	O
method	O
:	O

@CODE	O

Wes	O
McKinney	O
(	O
pandas	O
'	O
author	O
)	O
in	O
Python	O
for	O
Data	O
Analysis	O
provides	O
the	O
following	O
recipe	O
:	O

@CODE	O

which	O
returns	O
a	O
dictionary	O
whose	O
keys	O
are	O
your	O
group	O
labels	O
and	O
whose	O
values	O
are	O
DataFrames	O
,	O
i.e	O
.	O

@CODE	O

will	O
yield	O
what	O
you	O
are	O
looking	O
for	O
:	O

@CODE	O

Rather	O
than	O

@CODE	O

I	O
prefer	O
using	O
`	O
gb.groups	O
`	O

@CODE	O

Because	O
in	O
this	O
way	O
you	O
can	O
choose	O
multiple	O
columns	O
as	O
well	O
.	O
for	O
example	O
:	O

@CODE	O

I	O
was	O
looking	O
for	O
a	O
way	O
to	O
sample	O
a	O
few	O
members	O
of	O
the	O
GroupBy	O
obj	O
-	O
had	O
to	O
address	O
the	O
posted	O
question	O
to	O
get	O
this	O
done	O
.	O

create	O
groupby	B-API
object	O

@CODE	O

pick	O
N	O
dataframes	B-API
and	O
grab	O
their	O
indicies	O

@CODE	O

grab	O
the	O
groups	O

@CODE	O

optionally	O
-	O
turn	O
it	O
all	O
back	O
into	O
a	O
single	O
dataframe	B-API
object	O

@CODE	O
