making	O
matplotlib	O
scatter	O
plots	O
from	O
dataframes	B-API
in	O
Python's	O
pandas	O

what	O
is	O
the	O
best	O
way	O
to	O
make	O
a	O
series	O
of	O
scatter	O
plots	O
using	O
`	O
matplotlib	O
`	O
from	O
a	O
`	O
pandas	O
`	O
dataframe	B-API
in	O
Python	O
?	O

For	O
example	O
if	O
I	O
have	O
a	O
dataframe	B-API
`	O
df	B-API
`	O
that	O
has	O
some	O
columns	O
of	O
interest	O
,	O
I	O
find	O
myself	O
typically	O
converting	O
everything	O
to	O
arrays	O
:	O

@CODE	O

The	O
problem	O
with	O
converting	O
everything	O
to	O
array	O
before	O
plotting	O
is	O
that	O
it	O
forces	O
you	O
to	O
break	O
out	O
of	O
dataframes	B-API
.	O

Consider	O
these	O
two	O
use	O
cases	O
where	O
having	O
the	O
full	O
dataframe	B-API
is	O
essential	O
to	O
plotting	O
:	O

For	O
example	O
,	O
what	O
if	O
you	O
wanted	O
to	O
now	O
look	O
at	O
all	O
the	O
values	O
of	O
`	O
col3	O
`	O
for	O
the	O
corresponding	O
values	O
that	O
you	O
plotted	O
in	O
the	O
call	O
to	O
`	O
scatter	O
`	O
,	O
and	O
color	O
each	O
point	O
(	O
or	O
size	O
)	O
it	O
by	O
that	O
value	O
?	O

You'd	O
have	O
to	O
go	O
back	O
,	O
pull	O
out	O
the	O
non-na	O
values	O
of	O
`	O
col1	O
,	O
col2	O
`	O
and	O
check	O
what	O
their	O
corresponding	O
values	O
.	O

Is	O
there	O
a	O
way	O
to	O
plot	O
while	O
preserving	O
the	O
dataframe	B-API
?	O

For	O
example	O
:	O

@CODE	O

Similarly	O
,	O
imagine	O
that	O
you	O
wanted	O
to	O
filter	O
or	O
color	O
each	O
point	O
differently	O
depending	O
on	O
the	O
values	O
of	O
some	O
of	O
its	O
columns	O
.	O

E.g.	O
what	O
if	O
you	O
wanted	O
to	O
automatically	O
plot	O
the	O
labels	O
of	O
the	O
points	O
that	O
meet	O
a	O
certain	O
cutoff	O
on	O
`	O
col1	O
,	O
col2	O
`	O
alongside	O
them	O
(	O
where	O
the	O
labels	O
are	O
stored	O
in	O
another	O
column	O
of	O
the	O
df	B-API
)	O
,	O
or	O
color	O
these	O
points	O
differently	O
,	O
like	O
people	O
do	O
with	O
dataframes	B-API
in	O
R	O
.	O

For	O
example	O
:	O

@CODE	O

How	O
can	O
this	O
be	O
done	O
?	O

thanks	O

EDIT	O
Reply	O
to	O
crewbum	O
:	O

Thanks	O
!	O

You	O
say	O
that	O
the	O
best	O
way	O
is	O
to	O
plot	O
each	O
condition	O
(	O
like	O
`	O
subset_a	O
`	O
,	O
`	O
subset_b	O
`)	O
separately	O
.	O

What	O
if	O
you	O
have	O
many	O
conditions	O
,	O
e.g.	O
you	O
want	O
to	O
split	O
up	O
the	O
scatters	O
into	O
4	O
types	O
of	O
points	O
or	O
even	O
more	O
,	O
plotting	O
each	O
in	O
different	O
shape	O
/	O
color	O
.	O

How	O
can	O
you	O
elegantly	O
apply	O
condition	O
a	O
,	O
b	O
,	O
c	O
,	O
etc	O
.	O
and	O
make	O
sure	O
you	O
then	O
plot	O
"	O
the	O
rest	O
"	O
(	O
things	O
not	O
in	O
any	O
of	O
these	O
conditions	O
)	O
as	O
the	O
last	O
step	O
?	O

Similarly	O
in	O
your	O
example	O
where	O
you	O
plot	O
`	O
col1	O
,	O
col2	O
`	O
differently	O
based	O
on	O
`	O
col3	O
`	O
,	O
what	O
if	O
there	O
are	O
NA	O
values	O
that	O
break	O
the	O
association	O
between	O
`	O
col1	O
,	O
col2	O
,	O
col3	O
`	O
?	O

For	O
example	O
if	O
you	O
want	O
to	O
plot	O
all	O
`	O
col2	O
`	O
values	O
based	O
on	O
their	O
`	O
col3	O
`	O
values	O
,	O
but	O
some	O
rows	O
have	O
an	O
NA	O
value	O
in	O
either	O
`	O
col1	O
`	O
or	O
`	O
col3	O
`	O
,	O
forcing	O
you	O
to	O
use	O
`	O
dropna	B-API
`	O
first	O
.	O

So	O
you	O
would	O
do	O
:	O

@CODE	O

then	O
you	O
can	O
plot	O
using	O
`	O
mydata	O
`	O
like	O
you	O
show	O
--	O
plotting	O
the	O
scatter	O
between	O
`	O
col1	O
,	O
col2	O
`	O
using	O
the	O
values	O
of	O
`	O
col3	O
`	O
.	O

But	O
`	O
mydata	O
`	O
will	O
be	O
missing	O
some	O
points	O
that	O
have	O
values	O
for	O
`	O
col1	O
,	O
col2	O
`	O
but	O
are	O
NA	O
for	O
`	O
col3	O
`	O
,	O
and	O
those	O
still	O
have	O
to	O
be	O
plotted	O
...	O

so	O
how	O
would	O
you	O
basically	O
plot	O
"	O
the	O
rest	O
"	O
of	O
the	O
data	O
,	O
i.e.	O
the	O
points	O
that	O
are	O
not	O
in	O
the	O
filtered	O
set	O
`	O
mydata	O
`	O
?	O

Thanks	O
again	O
.	O

Try	O
passing	O
columns	O
of	O
the	O
`	O
DataFrame	B-API
`	O
directly	O
to	O
matplotlib	O
,	O
as	O
in	O
the	O
examples	O
below	O
,	O
instead	O
of	O
extracting	O
them	O
as	O
numpy	O
arrays	O
.	O

@CODE	O

Vary	O
scatter	O
point	O
size	O
based	O
on	O
another	O
column	O

@CODE	O

Vary	O
scatter	O
point	O
color	O
based	O
on	O
another	O
column	O

@CODE	O

Scatter	O
plot	O
with	O
legend	O

However	O
,	O
the	O
easiest	O
way	O
I've	O
found	O
to	O
create	O
a	O
scatter	O
plot	O
with	O
legend	O
is	O
to	O
call	O
`	O
plt.scatter	O
`	O
once	O
for	O
each	O
point	O
type	O
.	O

@CODE	O

Update	O

From	O
what	O
I	O
can	O
tell	O
,	O
matplotlib	O
simply	O
skips	O
points	O
with	O
NA	O
x	O
/	O
y	O
coordinates	O
or	O
NA	O
style	O
settings	O
(	O
e.g.	O
,	O
color	O
/	O
size	O
)	O
.	O

To	O
find	O
points	O
skipped	O
due	O
to	O
NA	O
,	O
try	O
the	O
`	O
isnull	O
`	O
method	O
:	O
`	O
df[	O
df.col3.isnull()	O
]	O
`	O

To	O
split	O
a	O
list	O
of	O
points	O
into	O
many	O
types	O
,	O
take	O
a	O
look	O
at	O
numpy	O
`	O
select	O
`	O
,	O
which	O
is	O
a	O
vectorized	O
if-then-else	O
implementation	O
and	O
accepts	O
an	O
optional	O
default	O
value	O
.	O

For	O
example	O
:	O

@CODE	O
