Creating an empty Pandas DataFrame , then filling it ?
I'm starting from the pandas Data Frame docs here : http://pandas.pydata.org/pandas-docs/stable/dsintro.html
I'd like to iteratively fill the Data Frame with values in a time series kind of calculation .
So basically , I'd like to initialize , data frame with columns A , B and timestamp rows , all 0 or all NaN .
I'd then add initial values and go over this data calculating the new row from the row before , say row[A][t ] = row[A][ t-1 ]+1 or so .
I'm currently using the code as below , but I feel it's kind of ugly and there must be a way to do this with a data frame directly or just a better way in general .
Note : I'm using Python 2.7 .
@CODE
Here's a couple of suggestions :
Use ` date_range ` for the index :
@CODE
Note : we could create an empty DataFrame ( with ` NaN ` s ) simply by writing :
@CODE
To do these type of calculations for the data , use a numpy array :
@CODE
Hence we can create the DataFrame :
@CODE
