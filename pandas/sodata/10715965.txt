Title:
java's add one row in a pandas.DataFrame
Q:
I understand that pandas is designed to load fully populated DataFrame but I need to create an empty DataFrame then add rows, one by one .What is the best way to do this ? 
I successfully created an empty DataFrame with : 
@CODE@
Then I can add a new row and fill a field with : 
@CODE@
It works but seems very odd :-/ (it fails for adding string value) 
How can I add a new row to my DataFrame (with different columns type) ?
A1:
You could use `pandas.concat()` or `DataFrame.append()`. For details and examples, see Merge, join, and concatenate .
A2:
You could create a list of dictionary. Where each dictionary in the list corresponds to a input data row. These rows are then added to the main list in a for loop. Once the list is complete, then create a data frame. This is a much faster approach. 
I has a similar problem where if I created a data frame for each row and append it to the main data frame it took 30 mins. On the other hand, if used below methodology, I was successful within seconds. 
@CODE@
A3:
For efficient appending see How to add an extra row to a pandas dataframe and Setting With Enlargement . 
Add rows through `loc` on non existing index data.
A4:
Example at @Nasser's answer: 
@CODE@
A5:
If you know the number of entries ex ante, you should preallocate the space by also providing the index (taking the data example from a different answer): 
@CODE@
Speed comparison 
@CODE@
And - as from the comments - with a size of 6000, the speed difference becomes even larger: 
Increasing the size of the array (12) and the number of rows (500) makes the speed difference more striking: 313ms vs 2.29s
A6:
@CODE@
